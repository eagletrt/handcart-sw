syntax = "proto2";

import "google/protobuf/empty.proto";

package communication;

//Server------------------------------------------------------------------------

service Broadcast {
    /*rpc SendRequest(Request) returns (google.protobuf.Empty);
    rpc SubRequest(google.protobuf.Empty) returns (Request);*/

    rpc SendResponse(Response) returns (google.protobuf.Empty);
    rpc SubResponse(google.protobuf.Empty) returns (stream Response);

    rpc SendAction(Action) returns (google.protobuf.Empty);
    rpc SubAction(google.protobuf.Empty) returns (stream Action);

    rpc SendWarning(Warning) returns (google.protobuf.Empty);
    rpc SubWarning(google.protobuf.Empty) returns (stream Warning);

    rpc SendError(Error) returns (google.protobuf.Empty);
    rpc SubError(google.protobuf.Empty) returns (stream Error);
}/outdated

//Frontend-to-Backend-----------------------------------------------------------

enum ReqResType {
    VOLTAGE = 1;
    CURRENT = 2;
    TEMPERATURE = 3;
}

/*message RequestVoltage {
    //Void
}

message RequestCurrent {
    //Void
}

message RequestTemperature {
    //Void
}*/

/*message Request {
    required ReqResType type = 1;
}*/

message Action {
    enum ActionType {
        PRECHARGE = 1;
        TARGET_VOLT = 2;
        FAN_CONTROL = 3;
    }

    optional ActionType action = 1 [default = PRECHARGE];
    optional int32 value = 2;
}

//Backend-to-Frontend-----------------------------------------------------------

/*message ResponseVoltage {
    repeated double data = 1;
}

message ResponseCurrent {
    optional double data = 1;
}

message ResponseTemperature {
    optional double data = 1;
}*/

message Response {
    required ReqResType type = 1;
    repeated double data = 2;
}

message Warning {
    required string message = 1;
    //optional int code = 2;
}

message Error {
    required string message = 1;
    //optional int code = 2;
}