syntax = "proto3";

package grpc;

message Empty {}

enum ReqResType {
    VOLTAGE = 0;
    CURRENT = 1;
    TEMPERATURE = 2;
}

//Server------------------------------------------------------------------------

service Broadcast {
    rpc SendRequest(Request) returns (Empty);
    rpc SubRequest(Empty) returns (stream Request);

    rpc SendResponse(Response) returns (Empty);
    rpc SubResponse(Empty) returns (stream Response);

    rpc SendAction(Action) returns (Empty);
    rpc SubAction(Empty) returns (stream Action);

    rpc SendWarning(Warning) returns (Empty);
    rpc SubWarning(Empty) returns (stream Warning);

    rpc SendError(Error) returns (Empty);
    rpc SubError(Empty) returns (stream Error);
}

//Frontend-to-Backend-----------------------------------------------------------

message Request {
    ReqResType type = 1;
}

message Action {
    enum ActionType {
        PRECHARGE = 0;
        TARGET_VOLT = 1;
        FAN_CONTROL = 2;
    }

    ActionType action = 1;
    int32 value = 2;
}

/*message RequestVoltage {
    //Void
}

message RequestCurrent {
    //Void
}

message RequestTemperature {
    //Void
}*/

//Backend-to-Frontend-----------------------------------------------------------

// if the data field is null then it's a request from frontend to backend, else it's a response from backend to frontend
message Response {
    ReqResType type = 1;
    repeated double data = 2;
}

message Warning {
    string message = 1;
    //int32 code = 2;
}

message Error {
    string message = 1;
    //int32 code = 2;
}

/*message ResponseVoltage {
    repeated double data = 1;
}

message ResponseCurrent {
    double data = 1;
}

message ResponseTemperature {
    double data = 1;
}*/